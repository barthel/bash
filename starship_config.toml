# Icons: https://www.nerdfonts.com/cheat-sheet
#
# Inserts a blank line between shell prompts
# https://starship.rs/config/
add_newline = true

format = """
$battery\
$directory\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$package\
$fill\
${custom.aws}\
$aws\
$gcloud\
$openstack\
${custom.kubernetes}\
$kubernetes\
$fill\
$username\
$hostname\
$shlvl\
$memory_usage\
$time\
$battery
$status\
$character
"""

[aws]
disabled = true
format = '[$symbol($profile )(\($region\) )]($style)'
style = "bold blue"
symbol = "AWS "

[battery]
disabled = false
format = "[$symbol]($style) "
full_symbol = "󰁹" # "󰁹" nf-md-battery
charging_symbol = "󰁹"
discharging_symbol = "󰁹"
unknown_symbol = "󰂑"
empty_symbol = "󰂎"

[[battery.display]]
threshold = 100
charging_symbol = "󰁹" # "󰁹" nf-md-battery
discharging_symbol = "󰁹"
style = "dimmed green"

[[battery.display]]
threshold = 80
charging_symbol = "󰂁" # "󰂁" nf-md-battery_80
discharging_symbol = "󰂁"
style = "dimmed green"

[[battery.display]]
threshold = 60
charging_symbol = "󰁿" # "󰁿" nf-md-battery_60
discharging_symbol = "󰁿"
style = "dimmed yellow"

[[battery.display]]
threshold = 40
charging_symbol = "󰁽" # "󰁽" nf-md-battery_40
discharging_symbol = "󰁽"
style = "dimmed yellow"

[[battery.display]]
threshold = 20
charging_symbol = "󰁻" # "󰁻" nf-md-battery_20
discharging_symbol = "󰁻"
style = "dimmed red"

[[battery.display]]
threshold = 10
charging_symbol = "󰁺" # "󰁺" nf-md-battery_outline
discharging_symbol = "󰁺"
style = "red"

[character]
format = '[$symbol ❯](bold green) '
success_symbol = "[✓](bold green)"
error_symbol = "" # rendered by status module

[cmd_duration]
disabled = true

[directory]
style = "cyan"
format = "[ ]($style)[$read_only]($read_only_style)[$path]($style) " # "" nf-fa-folder
truncation_length = 0
truncate_to_repo = false
truncation_symbol = ".../"
home_symbol = " ~" # "" nf-oct-home_fill
read_only_style = "bold red"
read_only = " " # "" nf-fa-lock
[directory.substitutions]

[fill]
symbol = "⋅"
style = "bold dimmed green"

[gcloud]
symbol = "️GC "

[git_branch]
style = "purple"
format = '[\[](green)[${symbol}${branch}]($style)'
symbol = " " # "" nf-dev-git_branch

[git_commit]
style = "purple"
format = '[:$hash$tag]($style)'
tag_symbol = "󰓹" # "󰓹" nf-md-tag

[git_state]
style = "yellow"
format = ' [\($state( $progress_current of $progress_total)\)]($style) '

[git_metrics]
disabled = true

[git_status]
style = "purple"
format = '[ ${ahead_behind}](${green})([|](green)[${all_status}](${style}))[\]](green) '
ahead = "·${count}" # "" nf-cod-arrow_up
behind = "·${count}" # "" nf-cod-arrow_down
diverged = "·${ahead_count} ·${behind_count}" # "" nf-cod-arrow_up, "" nf-cod-arrow_down
up_to_date = '[](green)' # "" nf-fa-check
modified = '[ ${count}](blue)' # "" nf-fa-plus
staged = '[ ${count}](yellow)' # "" nf-fa-circle
stashed = '[󰈻 ${count}](purple)' # "󰈻" nf-md-flag
untracked = '[${count}](cyan)' # "" nf-cod-ellipsis
conflicted = '[⚡ ${count}](bold red)' # "⚡" nf-oct-zap
deleted = '[ ${count}](red)' # "" nf-fa-remove

[helm]
disabled = true

[hostname]
ssh_only = false
style = "bold dimmed green"
format =  "[$hostname](${style})"
disabled = false

[hg_branch]
disabled = true

[java]
disabled = true

[jobs]
disabled = true

[julia]
disabled = true

[kotlin]
disabled = true

[kubernetes]
disabled = true

[line_break]
disabled = false

[lua]
disabled = true

[memory_usage]
disabled = true
threshold = -1

[nim]
disabled = true

[nix_shell]
disabled = true

[nodejs]
disabled = true

[ocaml]
disabled = true

[openstack]
disabled = true

[package]
disabled = false
format = '[$symbol$version]($style) '
symbol = ""
version_format = '${raw}'
display_private = true

[perl]
disabled = true

[php]
disabled = true

[purescript]
disabled = true

[python]
disabled = true

[rlang]
disabled = true

[red]
disabled = true

[ruby]
disabled = true

[rust]
disabled = true

[scala]
disabled = true

[shell]
disabled = true

[shlvl]
disabled = false
format = "[$symbol$shlvl]($style) "
symbol = "󰹹 " # "󰹹" nf-md-arrow_up_down
threshold = 2

[singularity]
disabled = true

[status]
disabled = false
style = "bold dimmed red"
symbol = '[](bold red)' # "" nf-fa-remove
format = '[$symbol \[$status$signal_number$maybe_int\]]($style)'
map_symbol = false
pipestatus = true

[swift]
disabled = true

[terraform]
disabled = true

[time]
style = "yellow"
disabled = false
format = ' [$time]($style) '
use_12hr = false
time_format = "%T%Z" # "%a. %d. %b %Y %T%Z"
utc_time_offset = "local"

[username]
style_user = "bold dimmed green"
style_root = "bold bright green"
format = "[${user}@]($style)"
disabled = false
show_always = true

[vagrant]
disabled = true

[vlang]
disabled = true

[vcsh]
disabled = true

[zig]
disabled = true

[custom.aws]
command = """
    if [ -n ${AWS_SESSION_EXPIRATION} ]
    then
#        declare -i time_diff=$(date -j -f %FT%H%M%S%z ${AWS_SESSION_EXPIRATION//:} +%s)-$(date -u +%s)
        _date_format="%FT%H%M%S" # without colons ':'
        _normalized_expiration="${AWS_SESSION_EXPIRATION//:}" # remove all colons ':'
        if [[ ${_normalized_expiration} =~ ^.*[-+]+[0-9]+ ]]
        then
            _date_format+="%z"
        elif [[ ${_normalized_expiration} =~ ^.*Z ]]
        then
            _date_format+="Z"
        fi
        declare -i time_diff=$(date -j -f ${_date_format} ${_normalized_expiration} +%s)-$(date -u +%s)
        if [ ${time_diff} -gt 0 ]
        then
            echo "${AWS_SESSION_PROFILE} ($(date -j -u -f %s ${time_diff} +%T))"
        else
            echo '' # "" nf-fa-remove
        fi
    fi
"""
when = "[[ -n ${AWS_SESSION_TOKEN} ]]"
format = '[ AWS: ${output}]($style)'
style = "bold blue"

[custom.kubernetes]
command = """
    config=${KUBECONFIG:-"${HOME}/.kube/config"}
    context="$(cat ${config} | grep "current-context:" | cut -d: -f2- | tr -d ' ')"
    if [ -z ${context} ]
    then
        echo "k8s: " # "" nf-fa-remove
    elif [[ ${context} =~ ^arn:aws.* ]]
    then
        if [ -n ${AWS_SESSION_EXPIRATION} ]
        then
            if [ $(date -j -f %FT%H%M%S%z ${AWS_SESSION_EXPIRATION//:} +%s) -gt $(date -u +%s) ]
            then
                
                if [ -f ${config} ]
                then
                    # cut the arn and return only 'cluster/foobar'
                    echo "k8s: ${context##*:} "
                fi
            fi
        fi
    else
        echo "k8s: ${context}"
    fi
"""
when = "[[ -n ${AWS_SESSION_TOKEN} ]]"
format = '[ ${output}]($style) '
style = "bold cyan"
